generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id          Int    @id @default(autoincrement())
  name        String

  subjectCode String
  subject     Subject @relation(fields: [subjectCode], references: [code])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Link to root of its prerequisite logic tree
  prerequisites   Expression? @relation("CoursePrerequisites", fields: [prerequisitesId], references: [id])
  prerequisitesId Int?

  // For when an expression is just wrapping a course
  Expression Expression[]
}

model Subject {
  code      String   @id
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[]
}

enum ExprType {
  AND
  OR
  COURSE
}

model Expression {
  id   Int      @id @default(autoincrement())
  type ExprType

  // Only if type == COURSE
  courseId Int?
  course   Course? @relation(fields: [courseId], references: [id])

  // Parent expression e.g. if it's part of a larger AND/OR expression
  parentId Int?
  parent   Expression?  @relation("ParentChild", fields: [parentId], references: [id])
  children Expression[] @relation("ParentChild")

  // Which courses this expression is a prerequisite for
  prerequisiteFor Course[] @relation("CoursePrerequisites")
}
